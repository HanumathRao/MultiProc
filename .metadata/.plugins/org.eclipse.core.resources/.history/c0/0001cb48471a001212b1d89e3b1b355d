package lazylist;

import list.IDs;

public class LazyList<T> implements IDs<T>{

	private LazyNode<T> head;
	
	@Override
	public boolean add(T item) {
		int key = item.hashCode();
		LazyNode<T> pred = head;
		LazyNode<T> cur = pred.getNext() ;
		while(key <= cur.getKey()){
			pred = cur;
			cur= cur.getNext();
		}
		try{
			pred.lock.lock();
			cur.lock.lock();
			if(key == cur.getKey()){
				return false;
			}
			LazyNode<T> node = new LazyNode<T>();
			node.setItem(item);
			pred.setNext(node);
			node.setNext(cur);
		}finally{
			cur.lock.unlock();
			pred.lock.unlock();
		}
		return true;
	}

	@Override
	public boolean remove(T item) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean contains(T item) {
		// TODO Auto-generated method stub
		return false;
	}

}
